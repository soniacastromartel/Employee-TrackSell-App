{"ast":null,"code":"import { __awaiter, __decorate } from 'tslib';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport * as ɵngcc0 from '@angular/core';\nexport { Storage } from '@ionic/storage';\nimport { isPlatformServer } from '@angular/common';\nvar IonicStorageModule_1;\nconst StorageConfigToken = new InjectionToken('STORAGE_CONFIG_TOKEN');\nclass NoopStorage extends Storage {\n  constructor() {\n    super();\n  }\n  create() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this;\n    });\n  }\n  defineDriver() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  get driver() {\n    return 'noop';\n  }\n  get(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return null;\n    });\n  }\n  set(key, value) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  remove(key) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  clear() {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  length() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return 0;\n    });\n  }\n  keys() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return [];\n    });\n  }\n  forEach(iteratorCallback) {\n    return __awaiter(this, void 0, void 0, function* () {});\n  }\n  setEncryptionKey(key) {}\n}\nfunction provideStorage(storageConfig) {\n  if (isPlatformServer(this.platformId)) {\n    // When running in a server context return the NoopStorage\n    return new NoopStorage();\n  }\n  return new Storage(storageConfig);\n}\nlet IonicStorageModule = IonicStorageModule_1 = class IonicStorageModule {\n  static forRoot(storageConfig = null) {\n    return {\n      ngModule: IonicStorageModule_1,\n      providers: [{\n        provide: StorageConfigToken,\n        useValue: storageConfig\n      }, {\n        provide: Storage,\n        useFactory: provideStorage,\n        deps: [StorageConfigToken]\n      }]\n    };\n  }\n};\nIonicStorageModule.ɵfac = function IonicStorageModule_Factory(t) {\n  return new (t || IonicStorageModule)();\n};\nIonicStorageModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: IonicStorageModule\n});\nIonicStorageModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IonicStorageModule, StorageConfigToken, provideStorage };\n\n//# sourceMappingURL=ionic-storage-angular.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}